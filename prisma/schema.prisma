// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Car {
  id     String @id @unique @default(uuid())
  model  String
  year   Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model User {
  id           String         @id @unique @default(uuid())
  email        String         @unique
  password     String
  name         String
  age          Int?
  from         String?
  live         String?
  tel          String?
  car          Car[]
  Post         Post[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  role         Role           @default(USER)
  RefreshToken RefreshToken[]
}

// model User {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   email     String   @unique
//   name      String?
//   password  String
//   age       Int?
//   from      String?
//   live      String?
//   tel       String?
//   role      Role     @default(USER)
//   posts     Post[]
//   Car       Car[]
// }

model Post {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
  title     String   @db.VarChar(255)
  like      Int      @default(0)
  comments  Int      @default(0)
  shares    Int      @default(0)
  type      Type     @default(Image)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
}

enum Role {
  USER
  ADMIN
}

enum Type {
  Image
  video
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String
  userId      String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
